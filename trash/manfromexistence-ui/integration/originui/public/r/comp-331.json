{
  "name": "comp-331",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui.com/r/button.json",
    "https://originui.com/r/dialog.json",
    "https://originui.com/r/input.json",
    "https://originui.com/r/label.json",
    "https://originui.com/r/textarea.json"
  ],
  "files": [
    {
      "path": "components/comp-331.tsx",
      "content": "\"use client\";\n\nimport { useCharacterLimit } from \"@/registry/default/hooks/use-character-limit\";\nimport { useImageUpload } from \"@/registry/default/hooks/use-image-upload\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/registry/default/ui/dialog\";\nimport { Input } from \"@/registry/default/ui/input\";\nimport { Label } from \"@/registry/default/ui/label\";\nimport { Textarea } from \"@/registry/default/ui/textarea\";\nimport { Check, ImagePlus, X } from \"lucide-react\";\nimport { useId, useState } from \"react\";\n\nexport default function Component() {\n  const id = useId();\n\n  const maxLength = 180;\n  const {\n    value,\n    characterCount,\n    handleChange,\n    maxLength: limit,\n  } = useCharacterLimit({\n    maxLength,\n    initialValue:\n      \"Hey, I am Margaret, a web developer who loves turning ideas into amazing websites!\",\n  });\n\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant=\"outline\">Edit profile</Button>\n      </DialogTrigger>\n      <DialogContent className=\"flex flex-col gap-0 overflow-y-visible p-0 sm:max-w-lg [&>button:last-child]:top-3.5\">\n        <DialogHeader className=\"contents space-y-0 text-left\">\n          <DialogTitle className=\"border-b border-border px-6 py-4 text-base\">\n            Edit profile\n          </DialogTitle>\n        </DialogHeader>\n        <DialogDescription className=\"sr-only\">\n          Make changes to your profile here. You can change your photo and set a username.\n        </DialogDescription>\n        <div className=\"overflow-y-auto\">\n          <ProfileBg defaultImage=\"/profile-bg.jpg\" />\n          <Avatar defaultImage=\"/avatar-72-01.jpg\" />\n          <div className=\"px-6 pb-6 pt-4\">\n            <form className=\"space-y-4\">\n              <div className=\"flex flex-col gap-4 sm:flex-row\">\n                <div className=\"flex-1 space-y-2\">\n                  <Label htmlFor={`${id}-first-name`}>First name</Label>\n                  <Input\n                    id={`${id}-first-name`}\n                    placeholder=\"Matt\"\n                    defaultValue=\"Margaret\"\n                    type=\"text\"\n                    required\n                  />\n                </div>\n                <div className=\"flex-1 space-y-2\">\n                  <Label htmlFor={`${id}-last-name`}>Last name</Label>\n                  <Input\n                    id={`${id}-last-name`}\n                    placeholder=\"Welsh\"\n                    defaultValue=\"Villard\"\n                    type=\"text\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor={`${id}-username`}>Username</Label>\n                <div className=\"relative\">\n                  <Input\n                    id={`${id}-username`}\n                    className=\"peer pe-9\"\n                    placeholder=\"Username\"\n                    defaultValue=\"margaret-villard-69\"\n                    type=\"text\"\n                    required\n                  />\n                  <div className=\"pointer-events-none absolute inset-y-0 end-0 flex items-center justify-center pe-3 text-muted-foreground/80 peer-disabled:opacity-50\">\n                    <Check\n                      size={16}\n                      strokeWidth={2}\n                      className=\"text-emerald-500\"\n                      aria-hidden=\"true\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor={`${id}-website`}>Website</Label>\n                <div className=\"flex rounded-lg shadow-sm shadow-black/5\">\n                  <span className=\"-z-10 inline-flex items-center rounded-s-lg border border-input bg-background px-3 text-sm text-muted-foreground\">\n                    https://\n                  </span>\n                  <Input\n                    id={`${id}-website`}\n                    className=\"-ms-px rounded-s-none shadow-none\"\n                    placeholder=\"yourwebsite.com\"\n                    defaultValue=\"www.margaret.com\"\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor={`${id}-bio`}>Biography</Label>\n                <Textarea\n                  id={`${id}-bio`}\n                  placeholder=\"Write a few sentences about yourself\"\n                  defaultValue={value}\n                  maxLength={maxLength}\n                  onChange={handleChange}\n                  aria-describedby={`${id}-description`}\n                />\n                <p\n                  id={`${id}-description`}\n                  className=\"mt-2 text-right text-xs text-muted-foreground\"\n                  role=\"status\"\n                  aria-live=\"polite\"\n                >\n                  <span className=\"tabular-nums\">{limit - characterCount}</span> characters left\n                </p>\n              </div>\n            </form>\n          </div>\n        </div>\n        <DialogFooter className=\"border-t border-border px-6 py-4\">\n          <DialogClose asChild>\n            <Button type=\"button\" variant=\"outline\">\n              Cancel\n            </Button>\n          </DialogClose>\n          <DialogClose asChild>\n            <Button type=\"button\">Save changes</Button>\n          </DialogClose>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction ProfileBg({ defaultImage }: { defaultImage?: string }) {\n  const [hideDefault, setHideDefault] = useState(false);\n  const { previewUrl, fileInputRef, handleThumbnailClick, handleFileChange, handleRemove } =\n    useImageUpload();\n\n  const currentImage = previewUrl || (!hideDefault ? defaultImage : null);\n\n  const handleImageRemove = () => {\n    handleRemove();\n    setHideDefault(true);\n  };\n\n  return (\n    <div className=\"h-32\">\n      <div className=\"relative flex h-full w-full items-center justify-center overflow-hidden bg-muted\">\n        {currentImage && (\n          <img\n            className=\"h-full w-full object-cover\"\n            src={currentImage}\n            alt={previewUrl ? \"Preview of uploaded image\" : \"Default profile background\"}\n            width={512}\n            height={96}\n          />\n        )}\n        <div className=\"absolute inset-0 flex items-center justify-center gap-2\">\n          <button\n            type=\"button\"\n            className=\"z-50 flex size-10 cursor-pointer items-center justify-center rounded-full bg-black/60 text-white outline-offset-2 transition-colors hover:bg-black/80 focus-visible:outline focus-visible:outline-2 focus-visible:outline-ring/70\"\n            onClick={handleThumbnailClick}\n            aria-label={currentImage ? \"Change image\" : \"Upload image\"}\n          >\n            <ImagePlus size={16} strokeWidth={2} aria-hidden=\"true\" />\n          </button>\n          {currentImage && (\n            <button\n              type=\"button\"\n              className=\"z-50 flex size-10 cursor-pointer items-center justify-center rounded-full bg-black/60 text-white outline-offset-2 transition-colors hover:bg-black/80 focus-visible:outline focus-visible:outline-2 focus-visible:outline-ring/70\"\n              onClick={handleImageRemove}\n              aria-label=\"Remove image\"\n            >\n              <X size={16} strokeWidth={2} aria-hidden=\"true\" />\n            </button>\n          )}\n        </div>\n      </div>\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        onChange={handleFileChange}\n        className=\"hidden\"\n        accept=\"image/*\"\n        aria-label=\"Upload image file\"\n      />\n    </div>\n  );\n}\n\nfunction Avatar({ defaultImage }: { defaultImage?: string }) {\n  const { previewUrl, fileInputRef, handleThumbnailClick, handleFileChange } = useImageUpload();\n\n  const currentImage = previewUrl || defaultImage;\n\n  return (\n    <div className=\"-mt-10 px-6\">\n      <div className=\"relative flex size-20 items-center justify-center overflow-hidden rounded-full border-4 border-background bg-muted shadow-sm shadow-black/10\">\n        {currentImage && (\n          <img\n            src={currentImage}\n            className=\"h-full w-full object-cover\"\n            width={80}\n            height={80}\n            alt=\"Profile image\"\n          />\n        )}\n        <button\n          type=\"button\"\n          className=\"absolute flex size-8 cursor-pointer items-center justify-center rounded-full bg-black/60 text-white outline-offset-2 transition-colors hover:bg-black/80 focus-visible:outline focus-visible:outline-2 focus-visible:outline-ring/70\"\n          onClick={handleThumbnailClick}\n          aria-label=\"Change profile picture\"\n        >\n          <ImagePlus size={16} strokeWidth={2} aria-hidden=\"true\" />\n        </button>\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          onChange={handleFileChange}\n          className=\"hidden\"\n          accept=\"image/*\"\n          aria-label=\"Upload profile picture\"\n        />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "hooks/use-character-limit.ts",
      "content": "\"use client\";\n\nimport { ChangeEvent, useState } from \"react\";\n\ntype UseCharacterLimitProps = {\n  maxLength: number;\n  initialValue?: string;\n};\n\nexport function useCharacterLimit({ maxLength, initialValue = \"\" }: UseCharacterLimitProps) {\n  const [value, setValue] = useState(initialValue);\n  const [characterCount, setCharacterCount] = useState(initialValue.length);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const newValue = e.target.value;\n    if (newValue.length <= maxLength) {\n      setValue(newValue);\n      setCharacterCount(newValue.length);\n    }\n  };\n\n  return {\n    value,\n    characterCount,\n    handleChange,\n    maxLength,\n  };\n}\n",
      "type": "registry:hook",
      "target": ""
    },
    {
      "path": "hooks/use-image-upload.ts",
      "content": "import { useCallback, useEffect, useRef, useState } from \"react\";\n\ninterface UseImageUploadProps {\n  onUpload?: (url: string) => void;\n}\n\nexport function useImageUpload({ onUpload }: UseImageUploadProps = {}) {\n  const previewRef = useRef<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\n  const [fileName, setFileName] = useState<string | null>(null);\n\n  const handleThumbnailClick = useCallback(() => {\n    fileInputRef.current?.click();\n  }, []);\n\n  const handleFileChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const file = event.target.files?.[0];\n      if (file) {\n        setFileName(file.name);\n        const url = URL.createObjectURL(file);\n        setPreviewUrl(url);\n        previewRef.current = url;\n        onUpload?.(url);\n      }\n    },\n    [onUpload],\n  );\n\n  const handleRemove = useCallback(() => {\n    if (previewUrl) {\n      URL.revokeObjectURL(previewUrl);\n    }\n    setPreviewUrl(null);\n    setFileName(null);\n    previewRef.current = null;\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n  }, [previewUrl]);\n\n  useEffect(() => {\n    return () => {\n      if (previewRef.current) {\n        URL.revokeObjectURL(previewRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    previewUrl,\n    fileName,\n    fileInputRef,\n    handleThumbnailClick,\n    handleFileChange,\n    handleRemove,\n  };\n}\n",
      "type": "registry:hook",
      "target": ""
    }
  ],
  "tags": []
}