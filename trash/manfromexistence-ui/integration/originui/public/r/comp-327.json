{
  "name": "comp-327",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui.com/r/button.json",
    "https://originui.com/r/dialog.json",
    "https://originui.com/r/input.json",
    "https://originui.com/r/label.json",
    "https://originui.com/r/tooltip.json"
  ],
  "files": [
    {
      "path": "components/comp-327.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/registry/default/lib/utils\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/registry/default/ui/dialog\";\nimport { Input } from \"@/registry/default/ui/input\";\nimport { Label } from \"@/registry/default/ui/label\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/registry/default/ui/tooltip\";\nimport { Check, Copy, UserRoundPlus } from \"lucide-react\";\nimport { useId, useRef, useState } from \"react\";\n\nexport default function Component() {\n  const id = useId();\n  const [emails, setEmails] = useState([\"mark@yourcompany.com\", \"jane@yourcompany.com\", \"\"]);\n  const [copied, setCopied] = useState<boolean>(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lastInputRef = useRef<HTMLInputElement>(null);\n\n  const addEmail = () => {\n    setEmails([...emails, \"\"]);\n  };\n\n  const handleEmailChange = (index: number, value: string) => {\n    const newEmails = [...emails];\n    newEmails[index] = value;\n    setEmails(newEmails);\n  };\n\n  const handleCopy = () => {\n    if (inputRef.current) {\n      navigator.clipboard.writeText(inputRef.current.value);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 1500);\n    }\n  };\n\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant=\"outline\">Invite members</Button>\n      </DialogTrigger>\n      <DialogContent\n        onOpenAutoFocus={(e) => {\n          e.preventDefault();\n          lastInputRef.current?.focus();\n        }}\n      >\n        <div className=\"flex flex-col gap-2\">\n          <div\n            className=\"flex size-11 shrink-0 items-center justify-center rounded-full border border-border\"\n            aria-hidden=\"true\"\n          >\n            <UserRoundPlus className=\"opacity-80\" size={16} strokeWidth={2} />\n          </div>\n          <DialogHeader>\n            <DialogTitle className=\"text-left\">Invite team members</DialogTitle>\n            <DialogDescription className=\"text-left\">\n              Invite teammates to earn free components.\n            </DialogDescription>\n          </DialogHeader>\n        </div>\n\n        <form className=\"space-y-5\">\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label>Invite via email</Label>\n              <div className=\"space-y-3\">\n                {emails.map((email, index) => (\n                  <Input\n                    key={index}\n                    id={`team-email-${index + 1}`}\n                    placeholder=\"hi@yourcompany.com\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => handleEmailChange(index, e.target.value)}\n                    ref={index === emails.length - 1 ? lastInputRef : undefined}\n                  />\n                ))}\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              onClick={addEmail}\n              className=\"text-sm underline hover:no-underline\"\n            >\n              + Add another\n            </button>\n          </div>\n          <Button type=\"button\" className=\"w-full\">\n            Send invites\n          </Button>\n        </form>\n\n        <hr className=\"my-1 border-t border-border\" />\n\n        <div className=\"space-y-2\">\n          <Label htmlFor={id}>Invite via magic link</Label>\n          <div className=\"relative\">\n            <Input\n              ref={inputRef}\n              id={id}\n              className=\"pe-9\"\n              type=\"text\"\n              defaultValue=\"https://originui.com/refer/87689\"\n              readOnly\n            />\n            <TooltipProvider delayDuration={0}>\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <button\n                    onClick={handleCopy}\n                    className=\"absolute inset-y-0 end-0 flex h-full w-9 items-center justify-center rounded-e-lg border border-transparent text-muted-foreground/80 outline-offset-2 transition-colors hover:text-foreground focus-visible:text-foreground focus-visible:outline focus-visible:outline-2 focus-visible:outline-ring/70 disabled:pointer-events-none disabled:cursor-not-allowed\"\n                    aria-label={copied ? \"Copied\" : \"Copy to clipboard\"}\n                    disabled={copied}\n                  >\n                    <div\n                      className={cn(\n                        \"transition-all\",\n                        copied ? \"scale-100 opacity-100\" : \"scale-0 opacity-0\",\n                      )}\n                    >\n                      <Check\n                        className=\"stroke-emerald-500\"\n                        size={16}\n                        strokeWidth={2}\n                        aria-hidden=\"true\"\n                      />\n                    </div>\n                    <div\n                      className={cn(\n                        \"absolute transition-all\",\n                        copied ? \"scale-0 opacity-0\" : \"scale-100 opacity-100\",\n                      )}\n                    >\n                      <Copy size={16} strokeWidth={2} aria-hidden=\"true\" />\n                    </div>\n                  </button>\n                </TooltipTrigger>\n                <TooltipContent className=\"px-2 py-1 text-xs\">Copy to clipboard</TooltipContent>\n              </Tooltip>\n            </TooltipProvider>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "tags": []
}