{
  "name": "animated-number-demo",
  "type": "registry:example",
  "registryDependencies": [
    "animated-number"
  ],
  "files": [
    {
      "path": "examples/animated-number-demo.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { Minus, Plus } from \"lucide-react\"\nimport { toast } from \"sonner\"\n\nimport { AnimatedNumber } from \"@/registry/new-york/ui/animated-number\"\nimport { Button } from \"@/registry/new-york/ui/button\"\nimport { GradientHeading } from \"@/registry/new-york/ui/gradient-heading\"\nimport { Slider } from \"@/registry/new-york/ui/slider\"\nimport {\n  TextureCardContent,\n  TextureCardHeader,\n  TextureCardStyled,\n} from \"@/registry/new-york/ui/texture-card\"\n\nfunction PrecisionExample() {\n  const [value, setValue] = useState(14.5678)\n\n  return (\n    <TextureCardStyled>\n      <TextureCardHeader className=\"pl-3\">\n        <GradientHeading size=\"xxs\">Precision</GradientHeading>\n      </TextureCardHeader>\n      <TextureCardContent>\n        <div className=\"flex gap-2\">\n          <div\n            className=\"text-2xl font-bold\"\n            style={{ minWidth: \"80px\", textAlign: \"left\" }}\n          >\n            <AnimatedNumber value={value} precision={2} />\n          </div>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            className=\"border border-primary/10 rounded-full ml-auto py-5\"\n            onClick={() => setValue(value + 13.456)}\n          >\n            <Plus className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </TextureCardContent>\n    </TextureCardStyled>\n  )\n}\n\nfunction FormatExample() {\n  const [value, setValue] = useState(10)\n\n  const customFormat = (num: number) => `$${num.toFixed(2)}`\n\n  return (\n    <TextureCardStyled>\n      <TextureCardHeader className=\"pl-3\">\n        <GradientHeading size=\"xxs\">Format</GradientHeading>\n      </TextureCardHeader>\n      <TextureCardContent>\n        <div className=\"flex gap-2\">\n          <div\n            className=\"text-2xl font-bold\"\n            style={{ minWidth: \"120px\", textAlign: \"left\" }}\n          >\n            <AnimatedNumber value={value} format={customFormat} />\n          </div>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            className=\"border border-primary/10 rounded-full ml-auto py-5\"\n            onClick={() => setValue(value + 50)}\n          >\n            <Plus className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </TextureCardContent>\n    </TextureCardStyled>\n  )\n}\n\nfunction HooksExample() {\n  const [value, setValue] = useState(10)\n\n  const handleAnimationStart = () => {\n    toast(\"🏁 Animation started \")\n  }\n\n  const handleAnimationComplete = () => {\n    toast(\"✅ Animation completed \")\n  }\n\n  return (\n    <TextureCardStyled>\n      <TextureCardHeader className=\"pl-3\">\n        <GradientHeading size=\"xxs\">Callbacks</GradientHeading>\n      </TextureCardHeader>\n      <TextureCardContent>\n        <div className=\"flex gap-2\">\n          <div\n            className=\"text-2xl font-bold\"\n            style={{ minWidth: \"50px\", textAlign: \"left\" }}\n          >\n            <AnimatedNumber\n              value={value}\n              onAnimationStart={handleAnimationStart}\n              onAnimationComplete={handleAnimationComplete}\n            />\n          </div>\n          <Button\n            size=\"sm\"\n            variant=\"ghost\"\n            className=\"border border-primary/10 rounded-full ml-auto py-5\"\n            onClick={() => setValue(value + 20)}\n          >\n            <Plus className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </TextureCardContent>\n    </TextureCardStyled>\n  )\n}\n\nfunction CustomSpringExample() {\n  const [value, setValue] = useState(1000)\n  const [mass, setMass] = useState(1)\n  const [stiffness, setStiffness] = useState(100)\n  const [damping, setDamping] = useState(40)\n\n  const handleValueChange =\n    (setter: (value: number) => void, minValue: number) =>\n    (values: number[]) => {\n      const newValue = Math.max(values[0], minValue)\n      setter(newValue)\n    }\n\n  return (\n    <TextureCardStyled className=\"w-full\">\n      <TextureCardHeader className=\"px-3\">\n        <GradientHeading size=\"sm\">Custom Spring Properties</GradientHeading>\n      </TextureCardHeader>\n      <TextureCardContent className=\"flex flex-col sm:flex-row justify-between items-center gap-8\">\n        <div\n          className=\"text-6xl font-bold mr-auto flex\"\n          style={{ minWidth: \"150px\", textAlign: \"right\" }}\n        >\n          <AnimatedNumber\n            value={value}\n            mass={mass}\n            stiffness={stiffness}\n            damping={damping}\n          />\n        </div>\n\n        <div className=\"flex flex-col gap-3 px-2\">\n          <Button\n            className=\"border border-primary/10 rounded-full py-5\"\n            onClick={() => setValue(value + 500)}\n          >\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Increase\n          </Button>\n          <Button\n            className=\"border border-primary/10 rounded-full py-5\"\n            disabled={value <= 500}\n            onClick={() => setValue(value - 300)}\n          >\n            <Minus className=\"h-4 w-4 mr-2\" />\n            Decrease\n          </Button>\n        </div>\n        <div className=\"ml-auto w-full\">\n          <div className=\"flex flex-col gap-4\">\n            <div className=\"ml-auto w-full\">\n              <label>Mass: {mass}</label>\n              <Slider\n                defaultValue={[mass]}\n                max={5}\n                step={0.1}\n                onValueChange={handleValueChange(setMass, 0.1)}\n              />\n            </div>\n            <div className=\"ml-auto w-full\">\n              <label>Stiffness: {stiffness}</label>\n              <Slider\n                defaultValue={[stiffness]}\n                max={200}\n                step={1}\n                onValueChange={handleValueChange(setStiffness, 1)}\n              />\n            </div>\n            <div className=\"ml-auto w-full\">\n              <label>Damping: {damping}</label>\n              <Slider\n                defaultValue={[damping]}\n                max={50}\n                step={1}\n                onValueChange={handleValueChange(setDamping, 1)}\n              />\n            </div>\n          </div>\n        </div>\n      </TextureCardContent>\n    </TextureCardStyled>\n  )\n}\n\nexport default function AnimatedNumberExamples() {\n  return (\n    <div className=\"  max-w-xl gap-4 py-6 mx-auto \">\n      <div className=\"w-full flex flex-col gap-2 justify-between\">\n        <CustomSpringExample />\n        <div className=\"flex   flex-col sm:flex-row gap-2\">\n          <PrecisionExample />\n          <FormatExample />\n          <HooksExample />\n        </div>\n      </div>\n    </div>\n  )\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}