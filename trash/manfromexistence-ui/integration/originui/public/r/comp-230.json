{
  "name": "comp-230",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui.com/r/button.json",
    "https://originui.com/r/command.json",
    "https://originui.com/r/label.json",
    "https://originui.com/r/popover.json"
  ],
  "files": [
    {
      "path": "components/comp-230.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/registry/default/lib/utils\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from \"@/registry/default/ui/command\";\nimport { Label } from \"@/registry/default/ui/label\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/registry/default/ui/popover\";\nimport { Check, ChevronDown, Plus } from \"lucide-react\";\nimport { useId, useState } from \"react\";\n\nconst organizations = [\n  {\n    value: \"originui\",\n    label: \"Origin UI\",\n  },\n  {\n    value: \"cruip\",\n    label: \"Cruip\",\n  },\n];\n\nexport default function Component() {\n  const id = useId();\n  const [open, setOpen] = useState<boolean>(false);\n  const [value, setValue] = useState<string>(\"originui\");\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor={id}>Select with search and button</Label>\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            id={id}\n            variant=\"outline\"\n            role=\"combobox\"\n            aria-expanded={open}\n            className=\"w-full justify-between bg-background px-3 font-normal outline-offset-0 hover:bg-background focus-visible:border-ring focus-visible:outline-[3px] focus-visible:outline-ring/20\"\n          >\n            <span className={cn(\"truncate\", !value && \"text-muted-foreground\")}>\n              {value\n                ? organizations.find((organization) => organization.value === value)?.label\n                : \"Select organization\"}\n            </span>\n            <ChevronDown\n              size={16}\n              strokeWidth={2}\n              className=\"shrink-0 text-muted-foreground/80\"\n              aria-hidden=\"true\"\n            />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent\n          className=\"w-full min-w-[var(--radix-popper-anchor-width)] border-input p-0\"\n          align=\"start\"\n        >\n          <Command>\n            <CommandInput placeholder=\"Find organization\" />\n            <CommandList>\n              <CommandEmpty>No organization found.</CommandEmpty>\n              <CommandGroup>\n                {organizations.map((organization) => (\n                  <CommandItem\n                    key={organization.value}\n                    value={organization.value}\n                    onSelect={(currentValue) => {\n                      setValue(currentValue === value ? \"\" : currentValue);\n                      setOpen(false);\n                    }}\n                  >\n                    {organization.label}\n                    {value === organization.value && (\n                      <Check size={16} strokeWidth={2} className=\"ml-auto\" />\n                    )}\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n              <CommandSeparator />\n              <CommandGroup>\n                <Button variant=\"ghost\" className=\"w-full justify-start font-normal\">\n                  <Plus\n                    size={16}\n                    strokeWidth={2}\n                    className=\"-ms-2 me-2 opacity-60\"\n                    aria-hidden=\"true\"\n                  />\n                  New organization\n                </Button>\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "tags": []
}