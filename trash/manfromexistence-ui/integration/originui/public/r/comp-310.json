{
  "name": "comp-310",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui.com/r/button.json"
  ],
  "files": [
    {
      "path": "components/comp-310.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/registry/default/ui/button\";\nimport { TicketPercent, X } from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\n\n// Define the sale end date - eg: new Date('2024-12-31T23:59:59');\nconst saleEndDate = new Date(Date.now() + 9 * 60 * 60 * 1000 + 45 * 60 * 1000 + 24 * 1000); // Setting 9h 45m 24s from now for demo purposes\n\ninterface TimeLeft {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n  isExpired: boolean;\n}\n\nexport default function Component() {\n  const [isVisible, setIsVisible] = useState(true);\n  const [timeLeft, setTimeLeft] = useState<TimeLeft>({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n    isExpired: false,\n  });\n\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const now = new Date();\n      const difference = saleEndDate.getTime() - now.getTime();\n\n      if (difference <= 0) {\n        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0, isExpired: true });\n        return;\n      }\n\n      const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((difference % (1000 * 60)) / 1000);\n\n      setTimeLeft({\n        days,\n        hours,\n        minutes,\n        seconds,\n        isExpired: false,\n      });\n    };\n\n    // Calculate immediately and then every second\n    calculateTimeLeft();\n    const timer = setInterval(calculateTimeLeft, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  if (!isVisible || timeLeft.isExpired) return null;\n\n  return (\n    <div className=\"dark bg-muted px-4 py-3 text-foreground\">\n      <div className=\"flex gap-2 md:items-center\">\n        <div className=\"flex grow gap-3 md:items-center\">\n          <div\n            className=\"flex size-9 shrink-0 items-center justify-center rounded-full bg-primary/15 max-md:mt-0.5\"\n            aria-hidden=\"true\"\n          >\n            <TicketPercent className=\"opacity-80\" size={16} strokeWidth={2} />\n          </div>\n          <div className=\"flex grow flex-col justify-between gap-3 md:flex-row md:items-center\">\n            <div className=\"space-y-0.5\">\n              <p className=\"text-sm font-medium\">Black Friday Sale!</p>\n              <p className=\"text-sm text-muted-foreground\">\n                It kicks off today and is available for just 24 hoursâ€”don&lsquo;t miss out!\n              </p>\n            </div>\n            <div className=\"flex gap-3 max-md:flex-wrap\">\n              <div className=\"flex items-center divide-x divide-primary-foreground rounded-lg bg-primary/15 text-sm tabular-nums\">\n                {timeLeft.days > 0 && (\n                  <span className=\"flex h-8 items-center justify-center p-2\">\n                    {timeLeft.days}\n                    <span className=\"text-muted-foreground\">d</span>\n                  </span>\n                )}\n                <span className=\"flex h-8 items-center justify-center p-2\">\n                  {timeLeft.hours.toString().padStart(2, \"0\")}\n                  <span className=\"text-muted-foreground\">h</span>\n                </span>\n                <span className=\"flex h-8 items-center justify-center p-2\">\n                  {timeLeft.minutes.toString().padStart(2, \"0\")}\n                  <span className=\"text-muted-foreground\">m</span>\n                </span>\n                <span className=\"flex h-8 items-center justify-center p-2\">\n                  {timeLeft.seconds.toString().padStart(2, \"0\")}\n                  <span className=\"text-muted-foreground\">s</span>\n                </span>\n              </div>\n              <Button size=\"sm\" className=\"text-sm\">\n                Buy now\n              </Button>\n            </div>\n          </div>\n        </div>\n        <Button\n          variant=\"ghost\"\n          className=\"group -my-1.5 -me-2 size-8 shrink-0 p-0 hover:bg-transparent\"\n          onClick={() => setIsVisible(false)}\n          aria-label=\"Close banner\"\n        >\n          <X\n            size={16}\n            strokeWidth={2}\n            className=\"opacity-60 transition-opacity group-hover:opacity-100\"\n            aria-hidden=\"true\"\n          />\n        </Button>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "tags": []
}