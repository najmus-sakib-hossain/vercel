{
  "name": "comp-233",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui.com/r/button.json",
    "https://originui.com/r/command.json",
    "https://originui.com/r/label.json",
    "https://originui.com/r/popover.json"
  ],
  "files": [
    {
      "path": "components/comp-233.tsx",
      "content": "\"use client\";\n\nimport { Button } from \"@/registry/default/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/registry/default/ui/command\";\nimport { Label } from \"@/registry/default/ui/label\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/registry/default/ui/popover\";\nimport {\n  Blocks,\n  Brain,\n  ChevronDown,\n  Cpu,\n  Database,\n  Globe,\n  Layout,\n  LineChart,\n  Network,\n  Search,\n  Server,\n} from \"lucide-react\";\nimport { useId, useState } from \"react\";\n\nconst items = [\n  {\n    value: \"analytics platform\",\n    label: \"Analytics Platform\",\n    icon: LineChart,\n    number: 2451,\n  },\n  {\n    value: \"ai services\",\n    label: \"AI Services\",\n    icon: Brain,\n    number: 1832,\n  },\n  {\n    value: \"database systems\",\n    label: \"Database Systems\",\n    icon: Database,\n    number: 1654,\n  },\n  {\n    value: \"compute resources\",\n    label: \"Compute Resources\",\n    icon: Cpu,\n    number: 943,\n  },\n  {\n    value: \"network services\",\n    label: \"Network Services\",\n    icon: Network,\n    number: 832,\n  },\n  {\n    value: \"web services\",\n    label: \"Web Services\",\n    icon: Globe,\n    number: 654,\n  },\n  {\n    value: \"monitoring tools\",\n    label: \"Monitoring Tools\",\n    icon: Search,\n    number: 432,\n  },\n  {\n    value: \"server management\",\n    label: \"Server Management\",\n    icon: Server,\n    number: 321,\n  },\n  {\n    value: \"infrastructure\",\n    label: \"Infrastructure\",\n    icon: Blocks,\n    number: 234,\n  },\n  {\n    value: \"frontend services\",\n    label: \"Frontend Services\",\n    icon: Layout,\n    number: 123,\n  },\n];\n\nexport default function Component() {\n  const id = useId();\n  const [open, setOpen] = useState<boolean>(false);\n  const [value, setValue] = useState<string>(\"\");\n\n  return (\n    <div className=\"space-y-2\">\n      <Label htmlFor={id}>Options with icon and number</Label>\n      <Popover open={open} onOpenChange={setOpen}>\n        <PopoverTrigger asChild>\n          <Button\n            id={id}\n            variant=\"outline\"\n            role=\"combobox\"\n            aria-expanded={open}\n            className=\"w-full justify-between bg-background px-3 font-normal outline-offset-0 hover:bg-background focus-visible:border-ring focus-visible:outline-[3px] focus-visible:outline-ring/20\"\n          >\n            {value ? (\n              <span className=\"flex min-w-0 items-center gap-2\">\n                {(() => {\n                  const selectedItem = items.find((item) => item.value === value);\n                  if (selectedItem) {\n                    const Icon = selectedItem.icon;\n                    return <Icon className=\"h-4 w-4 text-muted-foreground\" />;\n                  }\n                  return null;\n                })()}\n                <span className=\"truncate\">\n                  {items.find((item) => item.value === value)?.label}\n                </span>\n              </span>\n            ) : (\n              <span className=\"text-muted-foreground\">Select service category</span>\n            )}\n            <ChevronDown\n              size={16}\n              strokeWidth={2}\n              className=\"shrink-0 text-muted-foreground/80\"\n              aria-hidden=\"true\"\n            />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent\n          className=\"w-full min-w-[var(--radix-popper-anchor-width)] border-input p-0\"\n          align=\"start\"\n        >\n          <Command>\n            <CommandInput placeholder=\"Search services...\" />\n            <CommandList>\n              <CommandEmpty>No service found.</CommandEmpty>\n              <CommandGroup>\n                {items.map((item) => (\n                  <CommandItem\n                    key={item.value}\n                    value={item.value}\n                    onSelect={(currentValue) => {\n                      setValue(currentValue === value ? \"\" : currentValue);\n                      setOpen(false);\n                    }}\n                    className=\"flex items-center justify-between\"\n                  >\n                    <div className=\"flex items-center gap-2\">\n                      <item.icon className=\"h-4 w-4 text-muted-foreground\" />\n                      {item.label}\n                    </div>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {item.number.toLocaleString()}\n                    </span>\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "tags": []
}