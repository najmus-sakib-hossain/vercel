{
  "name": "comp-126",
  "type": "registry:component",
  "registryDependencies": [
    "https://originui.com/r/button.json"
  ],
  "files": [
    {
      "path": "components/comp-126.tsx",
      "content": "\"use client\";\n\nimport { useImageUpload } from \"@/registry/default/hooks/use-image-upload\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { CircleUserRound, X } from \"lucide-react\";\n\nexport default function Component() {\n  const {\n    previewUrl,\n    fileInputRef,\n    handleThumbnailClick,\n    handleFileChange,\n    handleRemove,\n    fileName,\n  } = useImageUpload();\n\n  return (\n    <div>\n      <div className=\"relative inline-flex\">\n        <Button\n          variant=\"outline\"\n          className=\"relative size-16 overflow-hidden\"\n          onClick={handleThumbnailClick}\n          aria-label={previewUrl ? \"Change image\" : \"Upload image\"}\n        >\n          {previewUrl ? (\n            <img\n              className=\"h-full w-full object-cover\"\n              src={previewUrl}\n              alt=\"Preview of uploaded image\"\n              width={40}\n              height={40}\n              style={{ objectFit: \"cover\" }}\n            />\n          ) : (\n            <div aria-hidden=\"true\">\n              <CircleUserRound className=\"opacity-60\" size={16} strokeWidth={2} />\n            </div>\n          )}\n        </Button>\n        {previewUrl && (\n          <Button\n            onClick={handleRemove}\n            size=\"icon\"\n            variant=\"destructive\"\n            className=\"absolute -right-2 -top-2 size-6 rounded-full border-2 border-background\"\n            aria-label=\"Remove image\"\n          >\n            <X size={16} />\n          </Button>\n        )}\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          onChange={handleFileChange}\n          className=\"hidden\"\n          accept=\"image/*\"\n          aria-label=\"Upload image file\"\n        />\n      </div>\n      {fileName && <p className=\"mt-2 text-xs text-muted-foreground\">{fileName}</p>}\n      <div className=\"sr-only\" aria-live=\"polite\" role=\"status\">\n        {previewUrl ? \"Image uploaded and preview available\" : \"No image uploaded\"}\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": ""
    },
    {
      "path": "hooks/use-image-upload.ts",
      "content": "import { useCallback, useEffect, useRef, useState } from \"react\";\n\ninterface UseImageUploadProps {\n  onUpload?: (url: string) => void;\n}\n\nexport function useImageUpload({ onUpload }: UseImageUploadProps = {}) {\n  const previewRef = useRef<string | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [previewUrl, setPreviewUrl] = useState<string | null>(null);\n  const [fileName, setFileName] = useState<string | null>(null);\n\n  const handleThumbnailClick = useCallback(() => {\n    fileInputRef.current?.click();\n  }, []);\n\n  const handleFileChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const file = event.target.files?.[0];\n      if (file) {\n        setFileName(file.name);\n        const url = URL.createObjectURL(file);\n        setPreviewUrl(url);\n        previewRef.current = url;\n        onUpload?.(url);\n      }\n    },\n    [onUpload],\n  );\n\n  const handleRemove = useCallback(() => {\n    if (previewUrl) {\n      URL.revokeObjectURL(previewUrl);\n    }\n    setPreviewUrl(null);\n    setFileName(null);\n    previewRef.current = null;\n    if (fileInputRef.current) {\n      fileInputRef.current.value = \"\";\n    }\n  }, [previewUrl]);\n\n  useEffect(() => {\n    return () => {\n      if (previewRef.current) {\n        URL.revokeObjectURL(previewRef.current);\n      }\n    };\n  }, []);\n\n  return {\n    previewUrl,\n    fileName,\n    fileInputRef,\n    handleThumbnailClick,\n    handleFileChange,\n    handleRemove,\n  };\n}\n",
      "type": "registry:hook",
      "target": ""
    }
  ],
  "tags": []
}