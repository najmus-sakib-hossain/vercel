{
  "name": "dynamic-island-demo",
  "type": "registry:example",
  "registryDependencies": [
    "dynamic-island"
  ],
  "files": [
    {
      "path": "examples/dynamic-island-demo.tsx",
      "content": "\"use client\"\n\nimport { createContext, useContext } from \"react\"\nimport { motion, useReducedMotion } from \"framer-motion\"\nimport {\n  ArrowUpLeftSquareIcon,\n  Loader,\n  Mail,\n  MessageCircle,\n  MousePointerClickIcon,\n  User,\n  Waves,\n} from \"lucide-react\"\n\nimport { Badge } from \"@/registry/default/ui/badge\"\nimport { Button } from \"@/registry/default/ui/button\"\nimport {\n  DynamicContainer,\n  DynamicDescription,\n  DynamicDiv,\n  DynamicIsland,\n  DynamicIslandProvider,\n  DynamicTitle,\n  SizePresets,\n  useDynamicIslandSize,\n  useScheduledAnimations,\n} from \"@/registry/default/ui/dynamic-island\"\n\nconst DynamicAction = () => {\n  const { state: blobState, setSize } = useDynamicIslandSize()\n\n  const blobStates: SizePresets[] = [\n    \"compact\",\n    \"large\",\n    \"tall\",\n    \"long\",\n    \"medium\",\n  ]\n\n  const cycleBlobStates = () => {\n    const currentIndex = blobStates.indexOf(blobState.size)\n    const nextIndex = (currentIndex + 1) % blobStates.length\n    setSize(blobStates[nextIndex])\n  }\n\n  useScheduledAnimations([\n    { size: \"compact\", delay: 1000 },\n    { size: \"large\", delay: 1200 },\n    { size: \"tall\", delay: 1600 },\n    { size: \"long\", delay: 1800 },\n    { size: \"medium\", delay: 2200 },\n  ])\n\n  // Provide dynamic detail in such a beautiful small place :)\n  const renderCompactState = () => (\n    <DynamicContainer className=\"flex items-center justify-center h-full w-full\">\n      <div className=\"relative w-full flex items-center\">\n        <DynamicDescription className=\"absolute left-4  my-auto text-lg font-medium tracking-tighter text-white \">\n          <MessageCircle className=\" h-5 w-5 fill-cyan-400 text-cyan-400\" />\n        </DynamicDescription>\n\n        <DynamicDescription className=\"absolute text-white right-4  my-auto text-lg font-bold tracking-tighter \">\n          newcult.co\n        </DynamicDescription>\n      </div>\n    </DynamicContainer>\n  )\n\n  // Great for call to action, popping up in users face :)\n  const renderLargeState = () => (\n    <DynamicContainer className=\"flex items-center justify-center h-full w-full\">\n      <div className=\"relative  flex w-full items-center justify-between gap-6 px-4\">\n        <Loader className=\"animate-spin h-12 w-12  text-yellow-300\" />\n\n        <DynamicTitle className=\"my-auto text-2xl font-black tracking-tighter text-white \">\n          loading\n        </DynamicTitle>\n      </div>\n    </DynamicContainer>\n  )\n\n  // Great for user onboarding, forms, etc\n  const renderTallState = () => (\n    <DynamicContainer className=\"  flex flex-col mt-6 w-full items-start  gap-1 px-8 font-semibold\">\n      <DynamicDescription className=\"bg-cyan-300 rounded-2xl tracking-tight leading-5  p-2\">\n        The Cult of Pythagoras\n      </DynamicDescription>\n      <DynamicDescription className=\"bg-cyan-300 rounded-2xl tracking-tight leading-5  p-2 text-left\">\n        Music of the Spheres, an idea that celestial bodies produce a form of\n        music through their movements\n      </DynamicDescription>\n\n      <DynamicTitle className=\" text-4xl font-black tracking-tighter text-cyan-100 \">\n        any cool cults?\n      </DynamicTitle>\n    </DynamicContainer>\n  )\n\n  const renderLongState = () => (\n    <DynamicContainer className=\"flex items-center justify-center h-full w-full\">\n      <DynamicDiv className=\"relative  flex w-full items-center justify-between gap-6 px-4\">\n        <div>\n          <Waves className=\" text-cyan-400 h-8 w-8\" />\n        </div>\n\n        <DynamicTitle className=\"my-auto text-xl font-black tracking-tighter text-white \">\n          Supercalifragilisticexpialid\n        </DynamicTitle>\n      </DynamicDiv>\n    </DynamicContainer>\n  )\n\n  const renderMediumState = () => (\n    <DynamicContainer className=\"flex flex-col justify-between px-2 pt-4 text-left text-white h-full\">\n      <DynamicTitle className=\"text-2xl pl-3 font-black tracking-tighter\">\n        Reincarnation, welcome back\n      </DynamicTitle>\n      <DynamicDescription className=\"leading-5 text-neutral-500 pl-3\">\n        Good for small tasks or call outs\n      </DynamicDescription>\n\n      <DynamicDiv className=\"flex flex-col mt-auto space-y-1 mb-2 bg-neutral-700 p-2 rounded-b-2xl\">\n        <Button>\n          <Mail className=\"mr-2 h-4 w-4 fill-cyan-400 text-neutral-900\" /> Login\n          with email\n        </Button>\n\n        <Button className=\"mt-1 \">\n          <User className=\"mr-2 h-4 w-4 fill-cyan-400 text-cyan-400\" /> Join the\n          cult now\n        </Button>\n      </DynamicDiv>\n    </DynamicContainer>\n  )\n\n  // Render function for other states\n  const renderOtherStates = () => (\n    <div className=\"flex items-center justify-center h-full w-full\">\n      <div>\n        <ArrowUpLeftSquareIcon className=\"text-white\" />\n      </div>\n      <p className=\"text-white\">cycle states</p>\n    </div>\n  )\n\n  // Main render logic based on size\n  function renderState() {\n    switch (blobState.size) {\n      case \"compact\":\n        return renderCompactState()\n      case \"large\":\n        return renderLargeState()\n      case \"tall\":\n        return renderTallState()\n      case \"medium\":\n        return renderMediumState()\n      case \"long\":\n        return renderLongState()\n      // Optionally add cases for other states as necessary\n      default:\n        return renderOtherStates()\n    }\n  }\n\n  return (\n    <div className=\" h-full\">\n      <div className=\"flex flex-col gap-4  h-full\">\n        <div className=\"absolute top-12 left-1\">\n          {/* {!blobState.isAnimating ? ( */}\n          <Button\n            onClick={cycleBlobStates}\n            disabled={blobState.isAnimating}\n            className=\"mt-4 p-2 border rounded-md max-w-[200px] \"\n          >\n            Click\n            <MousePointerClickIcon className=\"ml-2 h-4 w-4\" />\n          </Button>\n          {/* ) : null} */}\n        </div>\n        <div className=\"absolute top-1 right-2\">\n          <div>\n            <Badge variant=\"outline\">prev - {blobState.previousSize}</Badge>\n            <Badge variant=\"outline\">cur -{blobState.size}</Badge>\n          </div>\n        </div>\n\n        <DynamicIsland id=\"dynamic-blob\">{renderState()}</DynamicIsland>\n      </div>\n    </div>\n  )\n}\n\nexport default function DynamicIslandDemo() {\n  return (\n    <DynamicIslandProvider initialSize={\"default\"}>\n      <div>\n        <DynamicAction />\n      </div>\n    </DynamicIslandProvider>\n  )\n}\n\nconst FadeInStaggerContext = createContext(false)\n\nconst viewport = { once: true, margin: \"0px 0px -200px\" }\n\nexport function FadeIn(props: any) {\n  let shouldReduceMotion = useReducedMotion()\n  let isInStaggerGroup = useContext(FadeInStaggerContext)\n\n  return (\n    <motion.div\n      variants={{\n        hidden: { opacity: 0, y: shouldReduceMotion ? 0 : 24 },\n        visible: { opacity: 1, y: 0 },\n      }}\n      transition={{ duration: 0.5 }}\n      {...(isInStaggerGroup\n        ? {}\n        : {\n            initial: \"hidden\",\n            whileInView: \"visible\",\n            viewport,\n          })}\n      {...props}\n    />\n  )\n}\n\nexport function FadeInStagger({ faster = false, ...props }) {\n  return (\n    <FadeInStaggerContext.Provider value={true}>\n      <motion.div\n        initial=\"hidden\"\n        whileInView=\"visible\"\n        viewport={viewport}\n        transition={{ staggerChildren: faster ? 0.12 : 0.2 }}\n        {...props}\n      />\n    </FadeInStaggerContext.Provider>\n  )\n}\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}